{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreya\\\\rag\\\\rag2\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countryList = [{\n  name: \"India\",\n  code: \"IN\"\n}, {\n  name: \"United States\",\n  code: \"US\"\n}, {\n  name: \"United Kingdom\",\n  code: \"GB\"\n}, {\n  name: \"Australia\",\n  code: \"AU\"\n}, {\n  name: \"Germany\",\n  code: \"DE\"\n}, {\n  name: \"Canada\",\n  code: \"CA\"\n}, {\n  name: \"France\",\n  code: \"FR\"\n}, {\n  name: \"Japan\",\n  code: \"JP\"\n}, {\n  name: \"China\",\n  code: \"CN\"\n}, {\n  name: \"Russia\",\n  code: \"RU\"\n}];\n\n// Convert country name to code\nconst getCountryCode = name => {\n  const found = countryList.find(c => c.name === name);\n  return found ? found.code.toLowerCase() : \"\";\n};\nconst Dashboard = () => {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [activePanel, setActivePanel] = useState(\"Live News Feed\");\n  const [news, setNews] = useState([]);\n  const API_KEY = \"pub_788677aa36735d8282ee66b9146090ddf3d0f\";\n\n  // Fetch news strictly by country\n  useEffect(() => {\n    const fetchNews = async () => {\n      if (selectedCountry && activePanel === \"Live News Feed\") {\n        const countryCode = getCountryCode(selectedCountry);\n        try {\n          const response = await fetch(`https://newsdata.io/api/1/news?apikey=${API_KEY}&country=${countryCode}&language=en`);\n          const data = await response.json();\n          const filtered = (data.results || []).filter(article => {\n            return article.country && article.country.length > 0 && article.country[0].toLowerCase() === countryCode;\n          });\n          setNews(filtered);\n        } catch (err) {\n          console.error(\"Failed to fetch news:\", err);\n          setNews([]); // Clear previous news if error occurs\n        }\n      }\n    };\n    fetchNews();\n  }, [selectedCountry, activePanel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD83C\\uDF0D Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Select a Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country\",\n        value: selectedCountry,\n        onChange: e => setSelectedCountry(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Choose a Country --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), countryList.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.name,\n          children: country.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-buttons\",\n      children: [\"Live News Feed\", \"AI-Analysis Summary\", \"Recent Alerts Panel\"].map(panel => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activePanel === panel ? \"active\" : \"\",\n        onClick: () => setActivePanel(panel),\n        children: panel\n      }, panel, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-content\",\n      children: [activePanel === \"Live News Feed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-feed\",\n        children: news.length > 0 ? news.slice(0, 6).map((article, idx) => {\n          var _article$description;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [(_article$description = article.description) === null || _article$description === void 0 ? void 0 : _article$description.slice(0, 100), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: article.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Read More \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No news found for \", selectedCountry, \". Try another one.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), activePanel === \"AI-Analysis Summary\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83E\\uDDE0 AI-Based Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This section will provide summarized insights soon.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), activePanel === \"Recent Alerts Panel\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDEA8 Recent Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This will display real-time alerts for the selected country.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Q0XQM40JK9PJteMliTFfFiKdQWw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","countryList","name","code","getCountryCode","found","find","c","toLowerCase","Dashboard","_s","selectedCountry","setSelectedCountry","activePanel","setActivePanel","news","setNews","API_KEY","fetchNews","countryCode","response","fetch","data","json","filtered","results","filter","article","country","length","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","index","panel","onClick","slice","idx","_article$description","title","description","href","link","rel","_c","$RefreshReg$"],"sources":["C:/Users/shreya/rag/rag2/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\n\nconst countryList = [\n  { name: \"India\", code: \"IN\" },\n  { name: \"United States\", code: \"US\" },\n  { name: \"United Kingdom\", code: \"GB\" },\n  { name: \"Australia\", code: \"AU\" },\n  { name: \"Germany\", code: \"DE\" },\n  { name: \"Canada\", code: \"CA\" },\n  { name: \"France\", code: \"FR\" },\n  { name: \"Japan\", code: \"JP\" },\n  { name: \"China\", code: \"CN\" },\n  { name: \"Russia\", code: \"RU\" }\n];\n\n// Convert country name to code\nconst getCountryCode = (name) => {\n  const found = countryList.find((c) => c.name === name);\n  return found ? found.code.toLowerCase() : \"\";\n};\n\nconst Dashboard = () => {\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [activePanel, setActivePanel] = useState(\"Live News Feed\");\n  const [news, setNews] = useState([]);\n\n  const API_KEY = \"pub_788677aa36735d8282ee66b9146090ddf3d0f\";\n\n  // Fetch news strictly by country\n  useEffect(() => {\n    const fetchNews = async () => {\n      if (selectedCountry && activePanel === \"Live News Feed\") {\n        const countryCode = getCountryCode(selectedCountry);\n\n        try {\n          const response = await fetch(\n            `https://newsdata.io/api/1/news?apikey=${API_KEY}&country=${countryCode}&language=en`\n          );\n          const data = await response.json();\n\n          const filtered = (data.results || []).filter((article) => {\n            return (\n              article.country &&\n              article.country.length > 0 &&\n              article.country[0].toLowerCase() === countryCode\n            );\n          });\n\n          setNews(filtered);\n        } catch (err) {\n          console.error(\"Failed to fetch news:\", err);\n          setNews([]); // Clear previous news if error occurs\n        }\n      }\n    };\n\n    fetchNews();\n  }, [selectedCountry, activePanel]);\n\n  return (\n    <div className=\"dashboard\">\n      <h1 className=\"title\">🌍 Dashboard</h1>\n\n      {/* Country Dropdown */}\n      <div className=\"dropdown-container\">\n        <label htmlFor=\"country\">Select a Country:</label>\n        <select\n          id=\"country\"\n          value={selectedCountry}\n          onChange={(e) => setSelectedCountry(e.target.value)}\n        >\n          <option value=\"\">-- Choose a Country --</option>\n          {countryList.map((country, index) => (\n            <option key={index} value={country.name}>\n              {country.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Panel Buttons */}\n      <div className=\"panel-buttons\">\n        {[\"Live News Feed\", \"AI-Analysis Summary\", \"Recent Alerts Panel\"].map(\n          (panel) => (\n            <button\n              key={panel}\n              className={activePanel === panel ? \"active\" : \"\"}\n              onClick={() => setActivePanel(panel)}\n            >\n              {panel}\n            </button>\n          )\n        )}\n      </div>\n\n      {/* Panel Content */}\n      <div className=\"panel-content\">\n        {activePanel === \"Live News Feed\" && (\n          <div className=\"news-feed\">\n            {news.length > 0 ? (\n              news.slice(0, 6).map((article, idx) => (\n                <div className=\"news-card\" key={idx}>\n                  <h3>{article.title}</h3>\n                  <p>{article.description?.slice(0, 100)}...</p>\n                  <a\n                    href={article.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Read More →\n                  </a>\n                </div>\n              ))\n            ) : (\n              <p>No news found for {selectedCountry}. Try another one.</p>\n            )}\n          </div>\n        )}\n\n        {activePanel === \"AI-Analysis Summary\" && (\n          <div className=\"ai-panel\">\n            <h2>🧠 AI-Based Analysis</h2>\n            <p>This section will provide summarized insights soon.</p>\n          </div>\n        )}\n\n        {activePanel === \"Recent Alerts Panel\" && (\n          <div className=\"alert-panel\">\n            <h2>🚨 Recent Alerts</h2>\n            <p>This will display real-time alerts for the selected country.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,GAAG,CAClB;EAAEC,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7B;EAAED,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAK,CAAC,EACrC;EAAED,IAAI,EAAE,gBAAgB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACtC;EAAED,IAAI,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAK,CAAC,EACjC;EAAED,IAAI,EAAE,SAAS;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC/B;EAAED,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC9B;EAAED,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC9B;EAAED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7B;EAAED,IAAI,EAAE,OAAO;EAAEC,IAAI,EAAE;AAAK,CAAC,EAC7B;EAAED,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,CAC/B;;AAED;AACA,MAAMC,cAAc,GAAIF,IAAI,IAAK;EAC/B,MAAMG,KAAK,GAAGJ,WAAW,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,IAAI,KAAKA,IAAI,CAAC;EACtD,OAAOG,KAAK,GAAGA,KAAK,CAACF,IAAI,CAACK,WAAW,CAAC,CAAC,GAAG,EAAE;AAC9C,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,gBAAgB,CAAC;EAChE,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMoB,OAAO,GAAG,2CAA2C;;EAE3D;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIP,eAAe,IAAIE,WAAW,KAAK,gBAAgB,EAAE;QACvD,MAAMM,WAAW,GAAGf,cAAc,CAACO,eAAe,CAAC;QAEnD,IAAI;UACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yCAAyCJ,OAAO,YAAYE,WAAW,cACzE,CAAC;UACD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAElC,MAAMC,QAAQ,GAAG,CAACF,IAAI,CAACG,OAAO,IAAI,EAAE,EAAEC,MAAM,CAAEC,OAAO,IAAK;YACxD,OACEA,OAAO,CAACC,OAAO,IACfD,OAAO,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,IAC1BF,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAACpB,WAAW,CAAC,CAAC,KAAKW,WAAW;UAEpD,CAAC,CAAC;UAEFH,OAAO,CAACQ,QAAQ,CAAC;QACnB,CAAC,CAAC,OAAOM,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;UAC3Cd,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QACf;MACF;IACF,CAAC;IAEDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,eAAe,EAAEE,WAAW,CAAC,CAAC;EAElC,oBACEb,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlC,OAAA;MAAIiC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGvCtC,OAAA;MAAKiC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjClC,OAAA;QAAOuC,OAAO,EAAC,SAAS;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDtC,OAAA;QACEwC,EAAE,EAAC,SAAS;QACZC,KAAK,EAAE9B,eAAgB;QACvB+B,QAAQ,EAAGC,CAAC,IAAK/B,kBAAkB,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAP,QAAA,gBAEpDlC,OAAA;UAAQyC,KAAK,EAAC,EAAE;UAAAP,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC/CrC,WAAW,CAAC4C,GAAG,CAAC,CAACjB,OAAO,EAAEkB,KAAK,kBAC9B9C,OAAA;UAAoByC,KAAK,EAAEb,OAAO,CAAC1B,IAAK;UAAAgC,QAAA,EACrCN,OAAO,CAAC1B;QAAI,GADF4C,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNtC,OAAA;MAAKiC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B,CAAC,gBAAgB,EAAE,qBAAqB,EAAE,qBAAqB,CAAC,CAACW,GAAG,CAClEE,KAAK,iBACJ/C,OAAA;QAEEiC,SAAS,EAAEpB,WAAW,KAAKkC,KAAK,GAAG,QAAQ,GAAG,EAAG;QACjDC,OAAO,EAAEA,CAAA,KAAMlC,cAAc,CAACiC,KAAK,CAAE;QAAAb,QAAA,EAEpCa;MAAK,GAJDA,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CAEZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNtC,OAAA;MAAKiC,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BrB,WAAW,KAAK,gBAAgB,iBAC/Bb,OAAA;QAAKiC,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBnB,IAAI,CAACc,MAAM,GAAG,CAAC,GACdd,IAAI,CAACkC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACJ,GAAG,CAAC,CAAClB,OAAO,EAAEuB,GAAG;UAAA,IAAAC,oBAAA;UAAA,oBAChCnD,OAAA;YAAKiC,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBlC,OAAA;cAAAkC,QAAA,EAAKP,OAAO,CAACyB;YAAK;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBtC,OAAA;cAAAkC,QAAA,IAAAiB,oBAAA,GAAIxB,OAAO,CAAC0B,WAAW,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBF,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,KAAG;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC9CtC,OAAA;cACEsD,IAAI,EAAE3B,OAAO,CAAC4B,IAAK;cACnBX,MAAM,EAAC,QAAQ;cACfY,GAAG,EAAC,qBAAqB;cAAAtB,QAAA,EAC1B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA,GAT0BY,GAAG;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAU9B,CAAC;QAAA,CACP,CAAC,gBAEFtC,OAAA;UAAAkC,QAAA,GAAG,oBAAkB,EAACvB,eAAe,EAAC,oBAAkB;QAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC5D;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAEAzB,WAAW,KAAK,qBAAqB,iBACpCb,OAAA;QAAKiC,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBlC,OAAA;UAAAkC,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BtC,OAAA;UAAAkC,QAAA,EAAG;QAAmD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CACN,EAEAzB,WAAW,KAAK,qBAAqB,iBACpCb,OAAA;QAAKiC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BlC,OAAA;UAAAkC,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBtC,OAAA;UAAAkC,QAAA,EAAG;QAA4D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlHID,SAAS;AAAAgD,EAAA,GAAThD,SAAS;AAoHf,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}