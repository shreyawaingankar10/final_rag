{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreya\\\\rag\\\\rag2\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [news, setNews] = useState([]);\n  const [country, setCountry] = useState(\"in\");\n  const [activePanel, setActivePanel] = useState(\"Live News Feed\");\n  const [aiSummary, setAiSummary] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  const NEWS_API_KEY = \"pub_788677aa36735d8282ee66b9146090ddf3d0f\";\n  const GEMINI_API_KEY = \"AIzaSyCgz-p2aVMhAfPapKiuqpPk5fSU1mczYgI\";\n  const countries = [{\n    code: \"in\",\n    name: \"India\"\n  }, {\n    code: \"us\",\n    name: \"United States\"\n  }, {\n    code: \"gb\",\n    name: \"United Kingdom\"\n  }, {\n    code: \"au\",\n    name: \"Australia\"\n  }, {\n    code: \"ca\",\n    name: \"Canada\"\n  }, {\n    code: \"de\",\n    name: \"Germany\"\n  }, {\n    code: \"fr\",\n    name: \"France\"\n  }, {\n    code: \"jp\",\n    name: \"Japan\"\n  }];\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const res = await fetch(`https://newsdata.io/api/1/news?apikey=${NEWS_API_KEY}&country=${country}&language=en`);\n        const data = await res.json();\n        const articles = data.results || [];\n        setNews(articles);\n        const alertKeywords = [\"alert\", \"emergency\", \"warning\", \"disaster\", \"evacuate\", \"flood\", \"fire\", \"storm\"];\n        const filtered = articles.filter(article => alertKeywords.some(keyword => (article.title + \" \" + article.description).toLowerCase().includes(keyword)));\n        setAlerts(filtered);\n        generateAISummary(articles.slice(0, 5));\n      } catch (error) {\n        console.error(\"Failed to fetch news:\", error);\n        setNews([]);\n        setAiSummary([]);\n        setAlerts([]);\n      }\n    };\n    fetchNews();\n  }, [country]);\n  const generateAISummary = async articles => {\n    const prompt = `Summarize the following news headlines in bullet points:\\n\\n${articles.map((a, i) => `${i + 1}. ${a.title}`).join(\"\\n\")}`;\n    try {\n      var _json$candidates, _json$candidates$, _json$candidates$$con, _json$candidates$$con2, _json$candidates$$con3;\n      const res = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      const json = await res.json();\n      const output = ((_json$candidates = json.candidates) === null || _json$candidates === void 0 ? void 0 : (_json$candidates$ = _json$candidates[0]) === null || _json$candidates$ === void 0 ? void 0 : (_json$candidates$$con = _json$candidates$.content) === null || _json$candidates$$con === void 0 ? void 0 : (_json$candidates$$con2 = _json$candidates$$con.parts) === null || _json$candidates$$con2 === void 0 ? void 0 : (_json$candidates$$con3 = _json$candidates$$con2[0]) === null || _json$candidates$$con3 === void 0 ? void 0 : _json$candidates$$con3.text) || \"\";\n      const bulletPoints = output.split(\"\\n\").map(line => line.trim()).filter(line => line.startsWith(\"•\") || line.startsWith(\"-\") || /^\\d+\\./.test(line));\n      if (bulletPoints.length > 0) {\n        setAiSummary(bulletPoints);\n      } else if (output) {\n        setAiSummary([output]);\n      } else {\n        const fallback = articles.map((a, i) => `${i + 1}. ${a.title}`);\n        setAiSummary([`AI Summary unavailable. Top headlines:\\n`, ...fallback]);\n      }\n    } catch (err) {\n      console.error(\"Gemini API error:\", err);\n      setAiSummary([\"❌ AI Summary could not be generated.\"]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"\\uD83C\\uDF0D Global News Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country-select\",\n        children: \"Select Country: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country-select\",\n        value: country,\n        onChange: e => setCountry(e.target.value),\n        children: countries.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c.code,\n          children: c.name\n        }, c.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-panel-buttons\",\n      children: [\"Live News Feed\", \"AI-Analysis Summary\", \"Recent Alerts Panel\"].map(panel => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `dashboard-button ${activePanel === panel ? \"dashboard-active\" : \"\"}`,\n        onClick: () => setActivePanel(panel),\n        children: panel\n      }, panel, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-panel-content\",\n      children: [activePanel === \"Live News Feed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-news-feed\",\n        children: news.length > 0 ? news.filter(article => {\n          if (!article.country) return false;\n          if (Array.isArray(article.country)) {\n            return article.country.includes(country);\n          }\n          return typeof article.country === \"string\" && article.country.toLowerCase() === country.toLowerCase();\n        }).slice(0, 4).map((article, idx) => {\n          var _article$description;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-news-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [(_article$description = article.description) === null || _article$description === void 0 ? void 0 : _article$description.slice(0, 100), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: article.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Read More \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Loading news for \", country.toUpperCase(), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), activePanel === \"AI-Analysis Summary\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-ai-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83E\\uDDE0 AI-Based Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ai-summary-list\",\n          children: aiSummary.map((point, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: point\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), activePanel === \"Recent Alerts Panel\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-alert-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDEA8 Recent Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), alerts.length > 0 ? alerts.map((alert, idx) => {\n          var _alert$description;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-alert-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: alert.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [(_alert$description = alert.description) === null || _alert$description === void 0 ? void 0 : _alert$description.slice(0, 100), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: alert.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Read More \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No recent alerts for \", country.toUpperCase(), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"PYAo28tVlWn7Ds70qS6YPZ/phGU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","news","setNews","country","setCountry","activePanel","setActivePanel","aiSummary","setAiSummary","alerts","setAlerts","NEWS_API_KEY","GEMINI_API_KEY","countries","code","name","fetchNews","res","fetch","data","json","articles","results","alertKeywords","filtered","filter","article","some","keyword","title","description","toLowerCase","includes","generateAISummary","slice","error","console","prompt","map","a","i","join","_json$candidates","_json$candidates$","_json$candidates$$con","_json$candidates$$con2","_json$candidates$$con3","method","headers","body","JSON","stringify","contents","parts","text","output","candidates","content","bulletPoints","split","line","trim","startsWith","test","length","fallback","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","c","panel","onClick","Array","isArray","idx","_article$description","href","link","rel","toUpperCase","point","alert","_alert$description","_c","$RefreshReg$"],"sources":["C:/Users/shreya/rag/rag2/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n  const [news, setNews] = useState([]);\n  const [country, setCountry] = useState(\"in\");\n  const [activePanel, setActivePanel] = useState(\"Live News Feed\");\n  const [aiSummary, setAiSummary] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n\n  const NEWS_API_KEY = \"pub_788677aa36735d8282ee66b9146090ddf3d0f\";\n  const GEMINI_API_KEY = \"AIzaSyCgz-p2aVMhAfPapKiuqpPk5fSU1mczYgI\";\n\n  const countries = [\n    { code: \"in\", name: \"India\" },\n    { code: \"us\", name: \"United States\" },\n    { code: \"gb\", name: \"United Kingdom\" },\n    { code: \"au\", name: \"Australia\" },\n    { code: \"ca\", name: \"Canada\" },\n    { code: \"de\", name: \"Germany\" },\n    { code: \"fr\", name: \"France\" },\n    { code: \"jp\", name: \"Japan\" }\n  ];\n\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const res = await fetch(\n          `https://newsdata.io/api/1/news?apikey=${NEWS_API_KEY}&country=${country}&language=en`\n        );\n        const data = await res.json();\n        const articles = data.results || [];\n\n        setNews(articles);\n\n        const alertKeywords = [\n          \"alert\",\n          \"emergency\",\n          \"warning\",\n          \"disaster\",\n          \"evacuate\",\n          \"flood\",\n          \"fire\",\n          \"storm\"\n        ];\n        const filtered = articles.filter((article) =>\n          alertKeywords.some((keyword) =>\n            (article.title + \" \" + article.description)\n              .toLowerCase()\n              .includes(keyword)\n          )\n        );\n        setAlerts(filtered);\n        generateAISummary(articles.slice(0, 5));\n      } catch (error) {\n        console.error(\"Failed to fetch news:\", error);\n        setNews([]);\n        setAiSummary([]);\n        setAlerts([]);\n      }\n    };\n\n    fetchNews();\n  }, [country]);\n\n  const generateAISummary = async (articles) => {\n    const prompt = `Summarize the following news headlines in bullet points:\\n\\n${articles\n      .map((a, i) => `${i + 1}. ${a.title}`)\n      .join(\"\\n\")}`;\n\n    try {\n      const res = await fetch(\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            contents: [\n              {\n                parts: [{ text: prompt }]\n              }\n            ]\n          })\n        }\n      );\n\n      const json = await res.json();\n      const output = json.candidates?.[0]?.content?.parts?.[0]?.text || \"\";\n\n      const bulletPoints = output\n        .split(\"\\n\")\n        .map((line) => line.trim())\n        .filter(\n          (line) =>\n            line.startsWith(\"•\") ||\n            line.startsWith(\"-\") ||\n            /^\\d+\\./.test(line)\n        );\n\n      if (bulletPoints.length > 0) {\n        setAiSummary(bulletPoints);\n      } else if (output) {\n        setAiSummary([output]);\n      } else {\n        const fallback = articles.map((a, i) => `${i + 1}. ${a.title}`);\n        setAiSummary([`AI Summary unavailable. Top headlines:\\n`, ...fallback]);\n      }\n    } catch (err) {\n      console.error(\"Gemini API error:\", err);\n      setAiSummary([\"❌ AI Summary could not be generated.\"]);\n    }\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1 className=\"dashboard-title\">🌍 Global News Dashboard</h1>\n\n      <div className=\"dashboard-controls\">\n        <label htmlFor=\"country-select\">Select Country: </label>\n        <select\n          id=\"country-select\"\n          value={country}\n          onChange={(e) => setCountry(e.target.value)}\n        >\n          {countries.map((c) => (\n            <option key={c.code} value={c.code}>\n              {c.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"dashboard-panel-buttons\">\n        {[\"Live News Feed\", \"AI-Analysis Summary\", \"Recent Alerts Panel\"].map(\n          (panel) => (\n            <button\n              key={panel}\n              className={`dashboard-button ${\n                activePanel === panel ? \"dashboard-active\" : \"\"\n              }`}\n              onClick={() => setActivePanel(panel)}\n            >\n              {panel}\n            </button>\n          )\n        )}\n      </div>\n\n      <div className=\"dashboard-panel-content\">\n        {activePanel === \"Live News Feed\" && (\n          <div className=\"dashboard-news-feed\">\n            {news.length > 0 ? (\n              news\n                .filter((article) => {\n                  if (!article.country) return false;\n                  if (Array.isArray(article.country)) {\n                    return article.country.includes(country);\n                  }\n                  return (\n                    typeof article.country === \"string\" &&\n                    article.country.toLowerCase() === country.toLowerCase()\n                  );\n                })\n                .slice(0, 4)\n                .map((article, idx) => (\n                  <div className=\"dashboard-news-card\" key={idx}>\n                    <h3>{article.title}</h3>\n                    <p>{article.description?.slice(0, 100)}...</p>\n                    <a\n                      href={article.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Read More →\n                    </a>\n                  </div>\n                ))\n            ) : (\n              <p>Loading news for {country.toUpperCase()}...</p>\n            )}\n          </div>\n        )}\n\n        {activePanel === \"AI-Analysis Summary\" && (\n          <div className=\"dashboard-ai-panel\">\n            <h2>🧠 AI-Based Analysis</h2>\n            <ul className=\"ai-summary-list\">\n              {aiSummary.map((point, idx) => (\n                <li key={idx}>{point}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {activePanel === \"Recent Alerts Panel\" && (\n          <div className=\"dashboard-alert-panel\">\n            <h2>🚨 Recent Alerts</h2>\n            {alerts.length > 0 ? (\n              alerts.map((alert, idx) => (\n                <div className=\"dashboard-alert-card\" key={idx}>\n                  <h4>{alert.title}</h4>\n                  <p>{alert.description?.slice(0, 100)}...</p>\n                  <a\n                    href={alert.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Read More →\n                  </a>\n                </div>\n              ))\n            ) : (\n              <p>No recent alerts for {country.toUpperCase()}.</p>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,gBAAgB,CAAC;EAChE,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,YAAY,GAAG,2CAA2C;EAChE,MAAMC,cAAc,GAAG,yCAAyC;EAEhE,MAAMC,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAgB,CAAC,EACrC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAiB,CAAC,EACtC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAY,CAAC,EACjC;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC/B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAS,CAAC,EAC9B;IAAED,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAC9B;EAEDnB,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,yCAAyCP,YAAY,YAAYR,OAAO,cAC1E,CAAC;QACD,MAAMgB,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7B,MAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAO,IAAI,EAAE;QAEnCpB,OAAO,CAACmB,QAAQ,CAAC;QAEjB,MAAME,aAAa,GAAG,CACpB,OAAO,EACP,WAAW,EACX,SAAS,EACT,UAAU,EACV,UAAU,EACV,OAAO,EACP,MAAM,EACN,OAAO,CACR;QACD,MAAMC,QAAQ,GAAGH,QAAQ,CAACI,MAAM,CAAEC,OAAO,IACvCH,aAAa,CAACI,IAAI,CAAEC,OAAO,IACzB,CAACF,OAAO,CAACG,KAAK,GAAG,GAAG,GAAGH,OAAO,CAACI,WAAW,EACvCC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACJ,OAAO,CACrB,CACF,CAAC;QACDlB,SAAS,CAACc,QAAQ,CAAC;QACnBS,iBAAiB,CAACZ,QAAQ,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CjC,OAAO,CAAC,EAAE,CAAC;QACXM,YAAY,CAAC,EAAE,CAAC;QAChBE,SAAS,CAAC,EAAE,CAAC;MACf;IACF,CAAC;IAEDM,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;EAEb,MAAM8B,iBAAiB,GAAG,MAAOZ,QAAQ,IAAK;IAC5C,MAAMgB,MAAM,GAAG,+DAA+DhB,QAAQ,CACnFiB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,GAAGA,CAAC,GAAG,CAAC,KAAKD,CAAC,CAACV,KAAK,EAAE,CAAC,CACrCY,IAAI,CAAC,IAAI,CAAC,EAAE;IAEf,IAAI;MAAA,IAAAC,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACF,MAAM7B,GAAG,GAAG,MAAMC,KAAK,CACrB,0FAA0FN,cAAc,EAAE,EAC1G;QACEmC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,CAAC;cAAEC,IAAI,EAAEjB;YAAO,CAAC;UAC1B,CAAC;QAEL,CAAC;MACH,CACF,CAAC;MAED,MAAMjB,IAAI,GAAG,MAAMH,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B,MAAMmC,MAAM,GAAG,EAAAb,gBAAA,GAAAtB,IAAI,CAACoC,UAAU,cAAAd,gBAAA,wBAAAC,iBAAA,GAAfD,gBAAA,CAAkB,CAAC,CAAC,cAAAC,iBAAA,wBAAAC,qBAAA,GAApBD,iBAAA,CAAsBc,OAAO,cAAAb,qBAAA,wBAAAC,sBAAA,GAA7BD,qBAAA,CAA+BS,KAAK,cAAAR,sBAAA,wBAAAC,sBAAA,GAApCD,sBAAA,CAAuC,CAAC,CAAC,cAAAC,sBAAA,uBAAzCA,sBAAA,CAA2CQ,IAAI,KAAI,EAAE;MAEpE,MAAMI,YAAY,GAAGH,MAAM,CACxBI,KAAK,CAAC,IAAI,CAAC,CACXrB,GAAG,CAAEsB,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC1BpC,MAAM,CACJmC,IAAI,IACHA,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,IACpBF,IAAI,CAACE,UAAU,CAAC,GAAG,CAAC,IACpB,QAAQ,CAACC,IAAI,CAACH,IAAI,CACtB,CAAC;MAEH,IAAIF,YAAY,CAACM,MAAM,GAAG,CAAC,EAAE;QAC3BxD,YAAY,CAACkD,YAAY,CAAC;MAC5B,CAAC,MAAM,IAAIH,MAAM,EAAE;QACjB/C,YAAY,CAAC,CAAC+C,MAAM,CAAC,CAAC;MACxB,CAAC,MAAM;QACL,MAAMU,QAAQ,GAAG5C,QAAQ,CAACiB,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,GAAGA,CAAC,GAAG,CAAC,KAAKD,CAAC,CAACV,KAAK,EAAE,CAAC;QAC/DrB,YAAY,CAAC,CAAC,0CAA0C,EAAE,GAAGyD,QAAQ,CAAC,CAAC;MACzE;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ9B,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAE+B,GAAG,CAAC;MACvC1D,YAAY,CAAC,CAAC,sCAAsC,CAAC,CAAC;IACxD;EACF,CAAC;EAED,oBACEV,OAAA;IAAKqE,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCtE,OAAA;MAAIqE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7D1E,OAAA;MAAKqE,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCtE,OAAA;QAAO2E,OAAO,EAAC,gBAAgB;QAAAL,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxD1E,OAAA;QACE4E,EAAE,EAAC,gBAAgB;QACnBC,KAAK,EAAExE,OAAQ;QACfyE,QAAQ,EAAGC,CAAC,IAAKzE,UAAU,CAACyE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAP,QAAA,EAE3CvD,SAAS,CAACyB,GAAG,CAAEyC,CAAC,iBACfjF,OAAA;UAAqB6E,KAAK,EAAEI,CAAC,CAACjE,IAAK;UAAAsD,QAAA,EAChCW,CAAC,CAAChE;QAAI,GADIgE,CAAC,CAACjE,IAAI;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN1E,OAAA;MAAKqE,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrC,CAAC,gBAAgB,EAAE,qBAAqB,EAAE,qBAAqB,CAAC,CAAC9B,GAAG,CAClE0C,KAAK,iBACJlF,OAAA;QAEEqE,SAAS,EAAE,oBACT9D,WAAW,KAAK2E,KAAK,GAAG,kBAAkB,GAAG,EAAE,EAC9C;QACHC,OAAO,EAAEA,CAAA,KAAM3E,cAAc,CAAC0E,KAAK,CAAE;QAAAZ,QAAA,EAEpCY;MAAK,GANDA,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOJ,CAEZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEN1E,OAAA;MAAKqE,SAAS,EAAC,yBAAyB;MAAAC,QAAA,GACrC/D,WAAW,KAAK,gBAAgB,iBAC/BP,OAAA;QAAKqE,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EACjCnE,IAAI,CAAC+D,MAAM,GAAG,CAAC,GACd/D,IAAI,CACDwB,MAAM,CAAEC,OAAO,IAAK;UACnB,IAAI,CAACA,OAAO,CAACvB,OAAO,EAAE,OAAO,KAAK;UAClC,IAAI+E,KAAK,CAACC,OAAO,CAACzD,OAAO,CAACvB,OAAO,CAAC,EAAE;YAClC,OAAOuB,OAAO,CAACvB,OAAO,CAAC6B,QAAQ,CAAC7B,OAAO,CAAC;UAC1C;UACA,OACE,OAAOuB,OAAO,CAACvB,OAAO,KAAK,QAAQ,IACnCuB,OAAO,CAACvB,OAAO,CAAC4B,WAAW,CAAC,CAAC,KAAK5B,OAAO,CAAC4B,WAAW,CAAC,CAAC;QAE3D,CAAC,CAAC,CACDG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CACXI,GAAG,CAAC,CAACZ,OAAO,EAAE0D,GAAG;UAAA,IAAAC,oBAAA;UAAA,oBAChBvF,OAAA;YAAKqE,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClCtE,OAAA;cAAAsE,QAAA,EAAK1C,OAAO,CAACG;YAAK;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxB1E,OAAA;cAAAsE,QAAA,IAAAiB,oBAAA,GAAI3D,OAAO,CAACI,WAAW,cAAAuD,oBAAA,uBAAnBA,oBAAA,CAAqBnD,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,KAAG;YAAA;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC9C1E,OAAA;cACEwF,IAAI,EAAE5D,OAAO,CAAC6D,IAAK;cACnBT,MAAM,EAAC,QAAQ;cACfU,GAAG,EAAC,qBAAqB;cAAApB,QAAA,EAC1B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA,GAToCY,GAAG;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUxC,CAAC;QAAA,CACP,CAAC,gBAEJ1E,OAAA;UAAAsE,QAAA,GAAG,mBAAiB,EAACjE,OAAO,CAACsF,WAAW,CAAC,CAAC,EAAC,KAAG;QAAA;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAClD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAEAnE,WAAW,KAAK,qBAAqB,iBACpCP,OAAA;QAAKqE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCtE,OAAA;UAAAsE,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B1E,OAAA;UAAIqE,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC5B7D,SAAS,CAAC+B,GAAG,CAAC,CAACoD,KAAK,EAAEN,GAAG,kBACxBtF,OAAA;YAAAsE,QAAA,EAAesB;UAAK,GAAXN,GAAG;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACN,EAEAnE,WAAW,KAAK,qBAAqB,iBACpCP,OAAA;QAAKqE,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpCtE,OAAA;UAAAsE,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxB/D,MAAM,CAACuD,MAAM,GAAG,CAAC,GAChBvD,MAAM,CAAC6B,GAAG,CAAC,CAACqD,KAAK,EAAEP,GAAG;UAAA,IAAAQ,kBAAA;UAAA,oBACpB9F,OAAA;YAAKqE,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnCtE,OAAA;cAAAsE,QAAA,EAAKuB,KAAK,CAAC9D;YAAK;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtB1E,OAAA;cAAAsE,QAAA,IAAAwB,kBAAA,GAAID,KAAK,CAAC7D,WAAW,cAAA8D,kBAAA,uBAAjBA,kBAAA,CAAmB1D,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,KAAG;YAAA;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC5C1E,OAAA;cACEwF,IAAI,EAAEK,KAAK,CAACJ,IAAK;cACjBT,MAAM,EAAC,QAAQ;cACfU,GAAG,EAAC,qBAAqB;cAAApB,QAAA,EAC1B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA,GATqCY,GAAG;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUzC,CAAC;QAAA,CACP,CAAC,gBAEF1E,OAAA;UAAAsE,QAAA,GAAG,uBAAqB,EAACjE,OAAO,CAACsF,WAAW,CAAC,CAAC,EAAC,GAAC;QAAA;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACpD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxE,EAAA,CA1NID,SAAS;AAAA8F,EAAA,GAAT9F,SAAS;AA4Nf,eAAeA,SAAS;AAAC,IAAA8F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}