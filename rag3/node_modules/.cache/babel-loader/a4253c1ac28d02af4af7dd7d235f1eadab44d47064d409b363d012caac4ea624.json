{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreya\\\\rag\\\\rag2\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\"; // Gemini API import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [activePanel, setActivePanel] = useState(\"Live News Feed\");\n  const [news, setNews] = useState([]);\n  const [aiSummary, setAiSummary] = useState([]);\n  const NEWS_API_KEY = \"pub_788677aa36735d8282ee66b9146090ddf3d0f\";\n  const GEMINI_API_KEY = \"AIzaSyCgz-p2aVMhAfPapKiuqpPk5fSU1mczYgI\";\n  const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);\n  const countryList = [{\n    name: \"India\",\n    code: \"IN\"\n  }, {\n    name: \"United States\",\n    code: \"US\"\n  }, {\n    name: \"United Kingdom\",\n    code: \"GB\"\n  }, {\n    name: \"Australia\",\n    code: \"AU\"\n  }, {\n    name: \"Germany\",\n    code: \"DE\"\n  }, {\n    name: \"Canada\",\n    code: \"CA\"\n  }, {\n    name: \"France\",\n    code: \"FR\"\n  }, {\n    name: \"Japan\",\n    code: \"JP\"\n  }, {\n    name: \"China\",\n    code: \"CN\"\n  }, {\n    name: \"Russia\",\n    code: \"RU\"\n  }];\n  const getCountryCode = name => {\n    const found = countryList.find(c => c.name === name);\n    return found ? found.code.toLowerCase() : \"\";\n  };\n  useEffect(() => {\n    const fetchNews = async () => {\n      if (selectedCountry) {\n        const countryCode = getCountryCode(selectedCountry);\n        try {\n          const response = await fetch(`https://newsdata.io/api/1/news?apikey=${NEWS_API_KEY}&country=${countryCode}&language=en`);\n          const data = await response.json();\n          setNews(data.results || []);\n        } catch (err) {\n          console.error(\"Failed to fetch news:\", err);\n          setNews([]);\n        }\n      }\n    };\n    fetchNews();\n  }, [selectedCountry]);\n\n  // Gemini AI: Analyze news and return bullet-point summary\n  const analyzeNewsWithGemini = async () => {\n    if (news.length === 0) return [\"No news data for analysis.\"];\n    const textBlock = news.slice(0, 5).map((n, i) => `News ${i + 1}: ${n.title}\\n${n.description}`).join(\"\\n\\n\");\n    try {\n      const model = genAI.getGenerativeModel({\n        model: \"gemini-pro\"\n      });\n      const result = await model.generateContent(`Summarize the following news articles in 5 bullet points:\\n\\n${textBlock}`);\n      const response = await result.response;\n      const summaryText = response.text();\n      return summaryText.split(\"\\n\").filter(line => line.trim().length > 0);\n    } catch (error) {\n      console.error(\"Gemini API error:\", error);\n      return [\"Error generating AI summary.\"];\n    }\n  };\n\n  // Trigger Gemini analysis whenever news is updated\n  useEffect(() => {\n    const fetchAI = async () => {\n      const summary = await analyzeNewsWithGemini();\n      setAiSummary(summary);\n    };\n    if (news.length > 0) fetchAI();\n  }, [news]);\n\n  // Detect alert-related news\n  const getAlerts = () => {\n    const alertKeywords = [\"alert\", \"emergency\", \"warning\", \"disaster\", \"evacuate\", \"flood\", \"fire\", \"storm\"];\n    return news.filter(article => alertKeywords.some(keyword => (article.title + \" \" + article.description).toLowerCase().includes(keyword)));\n  };\n  const recentAlerts = getAlerts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"\\uD83C\\uDF0D Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country\",\n        children: \"Select a Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country\",\n        value: selectedCountry,\n        onChange: e => setSelectedCountry(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Choose a Country --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), countryList.map((country, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country.name,\n          children: country.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-panel-buttons\",\n      children: [\"Live News Feed\", \"AI-Analysis Summary\", \"Recent Alerts Panel\"].map(panel => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `dashboard-button ${activePanel === panel ? \"dashboard-active\" : \"\"}`,\n        onClick: () => setActivePanel(panel),\n        children: panel\n      }, panel, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-panel-content\",\n      children: [activePanel === \"Live News Feed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-news-feed\",\n        children: news.length > 0 ? news.slice(0, 6).map((article, idx) => {\n          var _article$description;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-news-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [(_article$description = article.description) === null || _article$description === void 0 ? void 0 : _article$description.slice(0, 100), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: article.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Read More \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No news found. Please select a country.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), activePanel === \"AI-Analysis Summary\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-ai-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83E\\uDDE0 AI-Based Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ai-summary-list\",\n          children: aiSummary.map((summary, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: summary\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), activePanel === \"Recent Alerts Panel\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-alert-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDEA8 Recent Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), recentAlerts.length > 0 ? recentAlerts.map((alert, idx) => {\n          var _alert$description;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-alert-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: alert.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [(_alert$description = alert.description) === null || _alert$description === void 0 ? void 0 : _alert$description.slice(0, 100), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: alert.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Read More \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No major alerts detected in the selected region.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"A6zmQBm9gzy12Stz8Ve9a/ohBxY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","GoogleGenerativeAI","jsxDEV","_jsxDEV","Dashboard","_s","selectedCountry","setSelectedCountry","activePanel","setActivePanel","news","setNews","aiSummary","setAiSummary","NEWS_API_KEY","GEMINI_API_KEY","genAI","countryList","name","code","getCountryCode","found","find","c","toLowerCase","fetchNews","countryCode","response","fetch","data","json","results","err","console","error","analyzeNewsWithGemini","length","textBlock","slice","map","n","i","title","description","join","model","getGenerativeModel","result","generateContent","summaryText","text","split","filter","line","trim","fetchAI","summary","getAlerts","alertKeywords","article","some","keyword","includes","recentAlerts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","country","index","panel","onClick","idx","_article$description","href","link","rel","alert","_alert$description","_c","$RefreshReg$"],"sources":["C:/Users/shreya/rag/rag2/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Dashboard.css\";\nimport { GoogleGenerativeAI } from \"@google/generative-ai\"; // Gemini API import\n\nconst Dashboard = () => {\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [activePanel, setActivePanel] = useState(\"Live News Feed\");\n  const [news, setNews] = useState([]);\n  const [aiSummary, setAiSummary] = useState([]);\n\n  const NEWS_API_KEY = \"pub_788677aa36735d8282ee66b9146090ddf3d0f\";\n  const GEMINI_API_KEY = \"AIzaSyCgz-p2aVMhAfPapKiuqpPk5fSU1mczYgI\";\n\n  const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);\n\n  const countryList = [\n    { name: \"India\", code: \"IN\" },\n    { name: \"United States\", code: \"US\" },\n    { name: \"United Kingdom\", code: \"GB\" },\n    { name: \"Australia\", code: \"AU\" },\n    { name: \"Germany\", code: \"DE\" },\n    { name: \"Canada\", code: \"CA\" },\n    { name: \"France\", code: \"FR\" },\n    { name: \"Japan\", code: \"JP\" },\n    { name: \"China\", code: \"CN\" },\n    { name: \"Russia\", code: \"RU\" },\n  ];\n\n  const getCountryCode = (name) => {\n    const found = countryList.find((c) => c.name === name);\n    return found ? found.code.toLowerCase() : \"\";\n  };\n\n  useEffect(() => {\n    const fetchNews = async () => {\n      if (selectedCountry) {\n        const countryCode = getCountryCode(selectedCountry);\n        try {\n          const response = await fetch(\n            `https://newsdata.io/api/1/news?apikey=${NEWS_API_KEY}&country=${countryCode}&language=en`\n          );\n          const data = await response.json();\n          setNews(data.results || []);\n        } catch (err) {\n          console.error(\"Failed to fetch news:\", err);\n          setNews([]);\n        }\n      }\n    };\n    fetchNews();\n  }, [selectedCountry]);\n\n  // Gemini AI: Analyze news and return bullet-point summary\n  const analyzeNewsWithGemini = async () => {\n    if (news.length === 0) return [\"No news data for analysis.\"];\n\n    const textBlock = news\n      .slice(0, 5)\n      .map((n, i) => `News ${i + 1}: ${n.title}\\n${n.description}`)\n      .join(\"\\n\\n\");\n\n    try {\n      const model = genAI.getGenerativeModel({ model: \"gemini-pro\" });\n      const result = await model.generateContent(\n        `Summarize the following news articles in 5 bullet points:\\n\\n${textBlock}`\n      );\n      const response = await result.response;\n      const summaryText = response.text();\n      return summaryText.split(\"\\n\").filter((line) => line.trim().length > 0);\n    } catch (error) {\n      console.error(\"Gemini API error:\", error);\n      return [\"Error generating AI summary.\"];\n    }\n  };\n\n  // Trigger Gemini analysis whenever news is updated\n  useEffect(() => {\n    const fetchAI = async () => {\n      const summary = await analyzeNewsWithGemini();\n      setAiSummary(summary);\n    };\n    if (news.length > 0) fetchAI();\n  }, [news]);\n\n  // Detect alert-related news\n  const getAlerts = () => {\n    const alertKeywords = [\n      \"alert\",\n      \"emergency\",\n      \"warning\",\n      \"disaster\",\n      \"evacuate\",\n      \"flood\",\n      \"fire\",\n      \"storm\",\n    ];\n    return news.filter((article) =>\n      alertKeywords.some((keyword) =>\n        (article.title + \" \" + article.description)\n          .toLowerCase()\n          .includes(keyword)\n      )\n    );\n  };\n\n  const recentAlerts = getAlerts();\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1 className=\"dashboard-title\">🌍 Dashboard</h1>\n\n      <div className=\"dashboard-dropdown-container\">\n        <label htmlFor=\"country\">Select a Country:</label>\n        <select\n          id=\"country\"\n          value={selectedCountry}\n          onChange={(e) => setSelectedCountry(e.target.value)}\n        >\n          <option value=\"\">-- Choose a Country --</option>\n          {countryList.map((country, index) => (\n            <option key={index} value={country.name}>\n              {country.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"dashboard-panel-buttons\">\n        {[\"Live News Feed\", \"AI-Analysis Summary\", \"Recent Alerts Panel\"].map(\n          (panel) => (\n            <button\n              key={panel}\n              className={`dashboard-button ${\n                activePanel === panel ? \"dashboard-active\" : \"\"\n              }`}\n              onClick={() => setActivePanel(panel)}\n            >\n              {panel}\n            </button>\n          )\n        )}\n      </div>\n\n      <div className=\"dashboard-panel-content\">\n        {activePanel === \"Live News Feed\" && (\n          <div className=\"dashboard-news-feed\">\n            {news.length > 0 ? (\n              news.slice(0, 6).map((article, idx) => (\n                <div className=\"dashboard-news-card\" key={idx}>\n                  <h3>{article.title}</h3>\n                  <p>{article.description?.slice(0, 100)}...</p>\n                  <a\n                    href={article.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Read More →\n                  </a>\n                </div>\n              ))\n            ) : (\n              <p>No news found. Please select a country.</p>\n            )}\n          </div>\n        )}\n\n        {activePanel === \"AI-Analysis Summary\" && (\n          <div className=\"dashboard-ai-panel\">\n            <h2>🧠 AI-Based Analysis</h2>\n            <ul className=\"ai-summary-list\">\n              {aiSummary.map((summary, idx) => (\n                <li key={idx}>{summary}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n\n        {activePanel === \"Recent Alerts Panel\" && (\n          <div className=\"dashboard-alert-panel\">\n            <h2>🚨 Recent Alerts</h2>\n            {recentAlerts.length > 0 ? (\n              recentAlerts.map((alert, idx) => (\n                <div className=\"dashboard-alert-card\" key={idx}>\n                  <h4>{alert.title}</h4>\n                  <p>{alert.description?.slice(0, 100)}...</p>\n                  <a\n                    href={alert.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Read More →\n                  </a>\n                </div>\n              ))\n            ) : (\n              <p>No major alerts detected in the selected region.</p>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}