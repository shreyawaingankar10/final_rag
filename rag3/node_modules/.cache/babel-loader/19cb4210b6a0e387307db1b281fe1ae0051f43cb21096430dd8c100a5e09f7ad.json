{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreya\\\\rag\\\\rag2\\\\src\\\\components\\\\DataCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DataCollection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataCollection = () => {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const navigate = useNavigate();\n  const handleAnalyze = async () => {\n    if (!url.startsWith(\"https://\")) {\n      alert(\"Please enter a valid URL!\");\n      return;\n    }\n    try {\n      var _data$candidates, _data$candidates$, _data$candidates$$con, _data$candidates$$con2, _data$candidates$$con3;\n      const res = await fetch(url);\n      const html = await res.text();\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const textContent = doc.body.innerText;\n      const prompt = `\nYou are a news analyst. Analyze the following news article and give a structured report in this format:\n\nSummary:\n<summary>\n\nHighlights:\n- Point 1\n- Point 2\n\nImpact:\n- Point 1\n- Point 2\n\nRecommendations:\n- Point 1\n- Point 2\n\nText:\n${textContent}\n      `;\n      const geminiResponse = await fetch(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyCgz-p2aVMhAfPapKiuqpPk5fSU1mczYgI\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      const data = await geminiResponse.json();\n      const result = data === null || data === void 0 ? void 0 : (_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : (_data$candidates$$con = _data$candidates$.content) === null || _data$candidates$$con === void 0 ? void 0 : (_data$candidates$$con2 = _data$candidates$$con.parts) === null || _data$candidates$$con2 === void 0 ? void 0 : (_data$candidates$$con3 = _data$candidates$$con2[0]) === null || _data$candidates$$con3 === void 0 ? void 0 : _data$candidates$$con3.text;\n      if (!result) {\n        alert(\"Failed to analyze article.\");\n        return;\n      }\n      navigate(\"/ai-analysis\", {\n        state: {\n          analysis: result,\n          url\n        }\n      });\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while analyzing the article.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-collection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDCF0 Enter News Article URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: url,\n      onChange: e => setUrl(e.target.value),\n      placeholder: \"Enter a news article URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"analyze-btn\",\n      onClick: handleAnalyze,\n      children: \"Analyze with AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(DataCollection, \"mURFzU2AGRkeoicFV0Hh0YHW9g4=\", false, function () {\n  return [useNavigate];\n});\n_c = DataCollection;\nexport default DataCollection;\nvar _c;\n$RefreshReg$(_c, \"DataCollection\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DataCollection","_s","url","setUrl","navigate","handleAnalyze","startsWith","alert","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","res","fetch","html","text","parser","DOMParser","doc","parseFromString","textContent","body","innerText","prompt","geminiResponse","method","headers","JSON","stringify","contents","parts","data","json","result","candidates","content","state","analysis","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shreya/rag/rag2/src/components/DataCollection.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./DataCollection.css\";\n\nconst DataCollection = () => {\n  const [url, setUrl] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleAnalyze = async () => {\n    if (!url.startsWith(\"https://\")) {\n      alert(\"Please enter a valid URL!\");\n      return;\n    }\n\n    try {\n      const res = await fetch(url);\n      const html = await res.text();\n\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const textContent = doc.body.innerText;\n\n      const prompt = `\nYou are a news analyst. Analyze the following news article and give a structured report in this format:\n\nSummary:\n<summary>\n\nHighlights:\n- Point 1\n- Point 2\n\nImpact:\n- Point 1\n- Point 2\n\nRecommendations:\n- Point 1\n- Point 2\n\nText:\n${textContent}\n      `;\n\n      const geminiResponse = await fetch(\n        \"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyCgz-p2aVMhAfPapKiuqpPk5fSU1mczYgI\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            contents: [{ parts: [{ text: prompt }] }],\n          }),\n        }\n      );\n\n      const data = await geminiResponse.json();\n      const result = data?.candidates?.[0]?.content?.parts?.[0]?.text;\n\n      if (!result) {\n        alert(\"Failed to analyze article.\");\n        return;\n      }\n\n      navigate(\"/ai-analysis\", { state: { analysis: result, url } });\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while analyzing the article.\");\n    }\n  };\n\n  return (\n    <div className=\"data-collection\">\n      <h2 className=\"title\">ðŸ“° Enter News Article URL</h2>\n      <input\n        type=\"text\"\n        value={url}\n        onChange={(e) => setUrl(e.target.value)}\n        placeholder=\"Enter a news article URL\"\n      />\n      <button className=\"analyze-btn\" onClick={handleAnalyze}>\n        Analyze with AI\n      </button>\n    </div>\n  );\n};\n\nexport default DataCollection;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}