{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreya\\\\Desktop\\\\health-and-me\\\\src\\\\components\\\\ExerciseTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line, Pie, Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './ExerciseTracker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseTracker = () => {\n  _s();\n  // Example data collected from a mobile device\n  const [exerciseData, setExerciseData] = useState({\n    steps: 12000,\n    workoutHours: 1.5,\n    caloriesBurned: 500,\n    distance: 8.2,\n    activeMinutes: 75,\n    waterIntake: 2.5\n  });\n\n  // Optionally, you could fetch this data from an API or mobile data using useEffect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setExerciseData(prevData => ({\n        ...prevData,\n        steps: prevData.steps + Math.floor(Math.random() * 200),\n        caloriesBurned: prevData.caloriesBurned + Math.floor(Math.random() * 10)\n      }));\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Example weekly data for charts\n  const weeklyData = {\n    steps: [8000, 10000, 12000, 11000, 14000, 13000, 15000],\n    workoutHours: [0.5, 1.0, 1.5, 1.0, 2.0, 1.5, 2.5],\n    caloriesBurned: [400, 450, 500, 470, 520, 530, 580],\n    distance: [5.0, 6.2, 7.0, 6.5, 8.0, 7.5, 8.2],\n    activeMinutes: [50, 60, 75, 70, 90, 80, 100],\n    waterIntake: [2.0, 2.5, 2.7, 2.5, 3.0, 2.8, 3.2]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exercise Tracker Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [exerciseData.steps.toLocaleString(), \" steps\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            datasets: [{\n              label: 'Steps (weekly)',\n              data: weeklyData.steps,\n              borderColor: 'black',\n              borderWidth: 2,\n              fill: false\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Workout Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [exerciseData.workoutHours, \" hours\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            datasets: [{\n              label: 'Workout Hours (weekly)',\n              data: weeklyData.workoutHours,\n              backgroundColor: 'black'\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [exerciseData.distance, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            datasets: [{\n              label: 'Distance (weekly)',\n              data: weeklyData.distance,\n              backgroundColor: 'black'\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Water Intake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [exerciseData.waterIntake, \" liters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            datasets: [{\n              label: 'Water Intake (weekly)',\n              data: weeklyData.waterIntake,\n              backgroundColor: ['pink', '#87cefa', '#4682b4', '#00bfff', '#4169e1', '#6495ed', '#1e90ff'],\n              borderColor: '#000000',\n              // Set the separator lines to black\n              borderWidth: 2 // Optional: Increase the thickness of the lines if necessary\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Calories Burned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [exerciseData.caloriesBurned, \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: {\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            datasets: [{\n              label: 'Calories Burned (weekly)',\n              data: weeklyData.caloriesBurned,\n              backgroundColor: ['#ffcccb', '#ffa07a', '#ff4500', '#ff8c00', '#ff6347', '#ff4500', '#ff6347'],\n              borderColor: '#000000',\n              // Set the separator lines to black\n              borderWidth: 2 // Optional: Increase the thickness of the lines if necessary\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ExerciseTracker, \"JUrjjQR7Wauogytm5yfbqNIAE4U=\");\n_c = ExerciseTracker;\nexport default ExerciseTracker;\nvar _c;\n$RefreshReg$(_c, \"ExerciseTracker\");","map":{"version":3,"names":["React","useState","useEffect","Line","Pie","Bar","jsxDEV","_jsxDEV","ExerciseTracker","_s","exerciseData","setExerciseData","steps","workoutHours","caloriesBurned","distance","activeMinutes","waterIntake","interval","setInterval","prevData","Math","floor","random","clearInterval","weeklyData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","data","labels","datasets","label","borderColor","borderWidth","fill","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/shreya/Desktop/health-and-me/src/components/ExerciseTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Pie, Bar } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport './ExerciseTracker.css';\r\n\r\nconst ExerciseTracker = () => {\r\n    // Example data collected from a mobile device\r\n    const [exerciseData, setExerciseData] = useState({\r\n        steps: 12000,\r\n        workoutHours: 1.5,\r\n        caloriesBurned: 500,\r\n        distance: 8.2,\r\n        activeMinutes: 75,\r\n        waterIntake: 2.5,\r\n    });\r\n\r\n    // Optionally, you could fetch this data from an API or mobile data using useEffect\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setExerciseData((prevData) => ({\r\n                ...prevData,\r\n                steps: prevData.steps + Math.floor(Math.random() * 200),\r\n                caloriesBurned: prevData.caloriesBurned + Math.floor(Math.random() * 10),\r\n            }));\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    // Example weekly data for charts\r\n    const weeklyData = {\r\n        steps: [8000, 10000, 12000, 11000, 14000, 13000, 15000],\r\n        workoutHours: [0.5, 1.0, 1.5, 1.0, 2.0, 1.5, 2.5],\r\n        caloriesBurned: [400, 450, 500, 470, 520, 530, 580],\r\n        distance: [5.0, 6.2, 7.0, 6.5, 8.0, 7.5, 8.2],\r\n        activeMinutes: [50, 60, 75, 70, 90, 80, 100],\r\n        waterIntake: [2.0, 2.5, 2.7, 2.5, 3.0, 2.8, 3.2],\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <h1>Exercise Tracker Dashboard</h1>\r\n            <div className=\"dashboard-grid\">\r\n                {/* Steps */}\r\n                <div className=\"dashboard-card\">\r\n                    <h3>Steps</h3>\r\n                    <p>{exerciseData.steps.toLocaleString()} steps</p>\r\n                    <Line \r\n                        data={{\r\n                            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                            datasets: [{\r\n                                label: 'Steps (weekly)',\r\n                                data: weeklyData.steps,\r\n                                borderColor: 'black',\r\n                                borderWidth: 2,\r\n                                fill: false\r\n                            }]\r\n                        }} \r\n                    />\r\n                </div>\r\n                \r\n                {/* Workout Hours */}\r\n                <div className=\"dashboard-card\">\r\n                    <h3>Workout Hours</h3>\r\n                    <p>{exerciseData.workoutHours} hours</p>\r\n                    <Bar \r\n                        data={{\r\n                            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                            datasets: [{\r\n                                label: 'Workout Hours (weekly)',\r\n                                data: weeklyData.workoutHours,\r\n                                backgroundColor: 'black'\r\n                            }]\r\n                        }} \r\n                    />\r\n                </div>\r\n                \r\n                \r\n                {/* Distance */}\r\n                <div className=\"dashboard-card\">\r\n                    <h3>Distance</h3>\r\n                    <p>{exerciseData.distance} km</p>\r\n                    <Bar \r\n                        data={{\r\n                            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                            datasets: [{\r\n                                label: 'Distance (weekly)',\r\n                                data: weeklyData.distance,\r\n                                backgroundColor: 'black'\r\n                            }]\r\n                        }} \r\n                    />\r\n                </div>\r\n  \r\n                \r\n                {/* Water Intake */}\r\n                <div className=\"dashboard-card\">\r\n                    <h3>Water Intake</h3>\r\n                    <p>{exerciseData.waterIntake} liters</p>\r\n                    <Pie \r\n                        data={{\r\n                            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                            datasets: [{\r\n                                label: 'Water Intake (weekly)',\r\n                                data: weeklyData.waterIntake,\r\n                                backgroundColor: ['pink', '#87cefa', '#4682b4', '#00bfff', '#4169e1', '#6495ed', '#1e90ff'],\r\n                                borderColor: '#000000', // Set the separator lines to black\r\n                                borderWidth: 2 // Optional: Increase the thickness of the lines if necessary\r\n                            }]\r\n                        }} \r\n                    />\r\n                </div>\r\n                 {/* Calories Burned */}\r\n                 <div className=\"dashboard-card\">\r\n                    <h3>Calories Burned</h3>\r\n                    <p>{exerciseData.caloriesBurned} kcal</p>\r\n                    <Pie \r\n                        data={{\r\n                            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                            datasets: [{\r\n                                label: 'Calories Burned (weekly)',\r\n                                data: weeklyData.caloriesBurned,\r\n                                backgroundColor: ['#ffcccb', '#ffa07a', '#ff4500', '#ff8c00', '#ff6347', '#ff4500', '#ff6347'],\r\n                                borderColor: '#000000', // Set the separator lines to black\r\n                                borderWidth: 2 // Optional: Increase the thickness of the lines if necessary\r\n                            }]\r\n                        }} \r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExerciseTracker;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,OAAO,eAAe;AACtB,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC;IAC7CW,KAAK,EAAE,KAAK;IACZC,YAAY,EAAE,GAAG;IACjBC,cAAc,EAAE,GAAG;IACnBC,QAAQ,EAAE,GAAG;IACbC,aAAa,EAAE,EAAE;IACjBC,WAAW,EAAE;EACjB,CAAC,CAAC;;EAEF;EACAf,SAAS,CAAC,MAAM;IACZ,MAAMgB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BR,eAAe,CAAES,QAAQ,KAAM;QAC3B,GAAGA,QAAQ;QACXR,KAAK,EAAEQ,QAAQ,CAACR,KAAK,GAAGS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QACvDT,cAAc,EAAEM,QAAQ,CAACN,cAAc,GAAGO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE;MAC3E,CAAC,CAAC,CAAC;IACP,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACN,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,UAAU,GAAG;IACfb,KAAK,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACvDC,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACjDC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACnDC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC7CC,aAAa,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;IAC5CC,WAAW,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EACnD,CAAC;EAED,oBACIV,OAAA;IAAKmB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChCpB,OAAA;MAAAoB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCxB,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAE3BpB,OAAA;QAAKmB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BpB,OAAA;UAAAoB,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdxB,OAAA;UAAAoB,QAAA,GAAIjB,YAAY,CAACE,KAAK,CAACoB,cAAc,CAAC,CAAC,EAAC,QAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClDxB,OAAA,CAACJ,IAAI;UACD8B,IAAI,EAAE;YACFC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACzDC,QAAQ,EAAE,CAAC;cACPC,KAAK,EAAE,gBAAgB;cACvBH,IAAI,EAAER,UAAU,CAACb,KAAK;cACtByB,WAAW,EAAE,OAAO;cACpBC,WAAW,EAAE,CAAC;cACdC,IAAI,EAAE;YACV,CAAC;UACL;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGNxB,OAAA;QAAKmB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BpB,OAAA;UAAAoB,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBxB,OAAA;UAAAoB,QAAA,GAAIjB,YAAY,CAACG,YAAY,EAAC,QAAM;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxCxB,OAAA,CAACF,GAAG;UACA4B,IAAI,EAAE;YACFC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACzDC,QAAQ,EAAE,CAAC;cACPC,KAAK,EAAE,wBAAwB;cAC/BH,IAAI,EAAER,UAAU,CAACZ,YAAY;cAC7B2B,eAAe,EAAE;YACrB,CAAC;UACL;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAINxB,OAAA;QAAKmB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BpB,OAAA;UAAAoB,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBxB,OAAA;UAAAoB,QAAA,GAAIjB,YAAY,CAACK,QAAQ,EAAC,KAAG;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjCxB,OAAA,CAACF,GAAG;UACA4B,IAAI,EAAE;YACFC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACzDC,QAAQ,EAAE,CAAC;cACPC,KAAK,EAAE,mBAAmB;cAC1BH,IAAI,EAAER,UAAU,CAACV,QAAQ;cACzByB,eAAe,EAAE;YACrB,CAAC;UACL;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAINxB,OAAA;QAAKmB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BpB,OAAA;UAAAoB,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBxB,OAAA;UAAAoB,QAAA,GAAIjB,YAAY,CAACO,WAAW,EAAC,SAAO;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxCxB,OAAA,CAACH,GAAG;UACA6B,IAAI,EAAE;YACFC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACzDC,QAAQ,EAAE,CAAC;cACPC,KAAK,EAAE,uBAAuB;cAC9BH,IAAI,EAAER,UAAU,CAACR,WAAW;cAC5BuB,eAAe,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;cAC3FH,WAAW,EAAE,SAAS;cAAE;cACxBC,WAAW,EAAE,CAAC,CAAC;YACnB,CAAC;UACL;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAELxB,OAAA;QAAKmB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC5BpB,OAAA;UAAAoB,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxBxB,OAAA;UAAAoB,QAAA,GAAIjB,YAAY,CAACI,cAAc,EAAC,OAAK;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzCxB,OAAA,CAACH,GAAG;UACA6B,IAAI,EAAE;YACFC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;YACzDC,QAAQ,EAAE,CAAC;cACPC,KAAK,EAAE,0BAA0B;cACjCH,IAAI,EAAER,UAAU,CAACX,cAAc;cAC/B0B,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;cAC9FH,WAAW,EAAE,SAAS;cAAE;cACxBC,WAAW,EAAE,CAAC,CAAC;YACnB,CAAC;UACL;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtB,EAAA,CA/HID,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AAiIrB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}